managed implementation in class zbp_dmo_partner_i unique;
strict ( 2 );

define behavior for YDMO_PARTNER_I alias PartnerBDI
persistent table ydmo_partner_db
lock master
authorization master ( instance )
//etag master <field_name>
{
  create ( authorization : global );
  update;
  delete;
  field ( readonly : update ) PartnerNumber;
//Validations belong to the behavioral definition of a business object and are defined at the corresponding entity,
//where they should also apply. They are triggered when the data is saved and can be registered for the individual
//events such as create, update and delete.
//Furthermore, there is also the possibility that a validation is only triggered when a single field is changed
  validation validateCoreData on save { field Country, PaymentCurrency; }
  validation validateKeyIsFilled on save { create; }

  mapping for ydmo_partner_db
    {
      PartnerNumber      = partner;
      PartnerName        = name;
      Street             = street;
      City               = city;
      Country            = country;
      PaymentCurrency    = payment_currency;
      ChangedAt          = changed_at;
      ChangedBy          = changed_by;
      CreatedAt          = created_at;
      CreatedBy          = created_by;
      LocalLastChangedAt = local_last_changed_at;
    }
}